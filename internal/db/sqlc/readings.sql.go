// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: readings.sql

package db

import (
	"context"
)

const addReading = `-- name: AddReading :one
INSERT INTO readings (device_id, value, at)
VALUES ($1, $2, COALESCE($3, NOW()))
RETURNING id, device_id, value, at
`

type AddReadingParams struct {
	DeviceID int64
	Value    float64
	Column3  interface{}
}

func (q *Queries) AddReading(ctx context.Context, arg AddReadingParams) (Reading, error) {
	row := q.db.QueryRow(ctx, addReading, arg.DeviceID, arg.Value, arg.Column3)
	var i Reading
	err := row.Scan(
		&i.ID,
		&i.DeviceID,
		&i.Value,
		&i.At,
	)
	return i, err
}

const lastReading = `-- name: LastReading :one
SELECT id, device_id, value, at
FROM readings
WHERE device_id = $1
ORDER BY at DESC, id DESC
LIMIT 1
`

func (q *Queries) LastReading(ctx context.Context, deviceID int64) (Reading, error) {
	row := q.db.QueryRow(ctx, lastReading, deviceID)
	var i Reading
	err := row.Scan(
		&i.ID,
		&i.DeviceID,
		&i.Value,
		&i.At,
	)
	return i, err
}
